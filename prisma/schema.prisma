generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id            String       @id @default(cuid())
  name          String
  email         String       @unique
  password      String
  role          String       @default("viewer")
  age           Int?
  status        String       @default("active")
  perfilFamilia String?
  goals         Goal[]
  wallet        Wallet?
  events        Event[]
  simulations   Simulation[]
  insurances    Insurance[]
  notifications Notification[]
  auditLogs     AuditLog[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  InsuranceProfile InsuranceProfile?

  @@index([status])
  @@index([role])
  @@index([createdAt])
}

model Goal {
  id        String   @id @default(cuid())
  client    Client   @relation(fields: [clientId], references: [id])
  clientId  String
  type      String
  amount    Decimal
  targetAt  DateTime
  createdAt DateTime @default(now())
}

model Wallet {
  id         String  @id @default(cuid())
  client     Client  @relation(fields: [clientId], references: [id])
  clientId   String  @unique
  totalValue Decimal
  allocation Json
}

model Event {
  id        String    @id @default(cuid())
  client    Client    @relation(fields: [clientId], references: [id])
  clientId  String
  type      String
  value     Decimal
  frequency String?
  date      DateTime?
}

model Simulation {
  id        String   @id @default(cuid())
  client    Client   @relation(fields: [clientId], references: [id])
  clientId  String
  payload   Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([clientId])
  @@index([createdAt])
}

model InsuranceProfile {
  id       String @id @default(cuid())
  client   Client @relation(fields: [clientId], references: [id])
  clientId String @unique
  type     String
  details  Json
}

model Insurance {
  id          String      @id @default(cuid())
  clientId    String
  type        InsuranceType
  provider    String
  policyNumber String?
  coverage    Decimal     @db.Decimal(15, 2)
  premium     Decimal     @db.Decimal(10, 2)
  startDate   DateTime
  endDate     DateTime?
  status      InsuranceStatus @default(ACTIVE)
  beneficiaries Json?
  details     Json?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  client Client @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@index([clientId])
  @@index([type])
  @@index([status])
  @@index([endDate])
  @@map("insurances")
}

model Notification {
  id          String             @id @default(cuid())
  clientId    String
  type        NotificationType
  title       String
  message     String
  status      NotificationStatus @default(UNREAD)
  metadata    Json?
  scheduledAt DateTime?
  readAt      DateTime?
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt

  client Client @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@index([clientId])
  @@index([type])
  @@index([status])
  @@index([scheduledAt])
  @@map("notifications")
}

model AuditLog {
  id          String      @id @default(cuid())
  clientId    String?
  userId      String?
  action      AuditAction
  resource    String
  resourceId  String?
  oldValues   Json?
  newValues   Json?
  ipAddress   String?
  userAgent   String?
  metadata    Json?
  createdAt   DateTime    @default(now())

  client Client? @relation(fields: [clientId], references: [id], onDelete: SetNull)

  @@index([clientId])
  @@index([userId])
  @@index([action])
  @@index([resource])
  @@index([createdAt])
  @@map("audit_logs")
}

enum InsuranceType {
  LIFE
  DISABILITY
  HEALTH
  AUTO
  HOME
  TRAVEL
  OTHER
}

enum InsuranceStatus {
  ACTIVE
  INACTIVE
  EXPIRED
  CANCELLED
}

enum NotificationType {
  INSURANCE_EXPIRING
  GOAL_DEADLINE
  PROJECTION_UPDATE
  SYSTEM_ALERT
  REMINDER
  ACHIEVEMENT
}

enum NotificationStatus {
  UNREAD
  READ
  ARCHIVED
}

enum AuditAction {
  CREATE
  UPDATE
  DELETE
  LOGIN
  LOGOUT
  EXPORT
  IMPORT
}
